
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: "maven"

version = "${mc_version}-${mod_version}"
group= "tencao.morebees"
archivesBaseName = "morebees"

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    mappings = "${mappings_version}"
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "http://maven.shadowfacts.net/"
    }
    maven {
        name = "forestry"
        url = "http://maven.ic2.player.to/"
    }
}

dependencies {
    deobfCompile("net.sengir.forestry:forestry_${forestry_mcversion}:${forestry_version}") {
        transitive = false
    }
    compile "net.shadowfacts:Forgelin:${forgelin_version}"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

configurations {
    shade
    compile.extendsFrom shade
}

processResources
{
   
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
   
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea { module { inheritOutputDirs = true } }

task sourceJar(type: Jar, dependsOn: "sourceMainJava", overwrite: true) {
    from "src/main/java"
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives sourceJar
    archives deobfJar
}

jar {
    for (dep in configurations.shade) {
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

tasks.withType(Copy) {
    includeEmptyDirs = false
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}